{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Registration.svelte",
    "../../TemplateEntity.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import {Router, Link, Route} from \"svelte-routing\";\n    import {USER} from './store.js';\n    import {doQuery} from './utils.js';\n    import TemplateEntity from \"./Components/TemplateEntity/TemplateEntity.svelte\";\n    import Navbar from \"./Components/Navbar/Navbar.svelte\";\n    import GoodTable from \"./Components/GoodTable/GoodTable.svelte\";\n    import GoodCreate from \"./Components/GoodCreate/GoodCreate.svelte\";\n    import GoodEdit from \"./Components/GoodEdit/GoodEdit.svelte\";\n    import SaleTable from \"./Components/SaleTable/SaleTable.svelte\";\n    import SaleCreate from \"./Components/SaleCreate/SaleCreate.svelte\";\n    import SaleEdit from \"./Components/SaleEdit/SaleEdit.svelte\";\n    import Warehouse1Table from \"./Components/Warehouse1Table/Warehouse1Table.svelte\";\n    import Warehouse1Create from \"./Components/Warehouse1Create/Warehouse1Create.svelte\";\n    import Warehouse1Edit from \"./Components/Warehouse1Edit/Warehouse1Edit.svelte\";\n    import Warehouse2Table from \"./Components/Warehouse2Table/Warehouse2Table.svelte\";\n    import Warehouse2Create from \"./Components/Warehouse2Create/Warehouse2Create.svelte\";\n    import Warehouse2Edit from \"./Components/Warehouse2Edit/Warehouse2Edit.svelte\";\n\n    import {onMount} from 'svelte';\n    import Registration from \"./Components/Registreation/Registration.svelte\";\n\n    let mounted = false;\n\n    onMount(() => {\n        doQuery('/user')\n                .then(response => response.json())\n                .then(json => {\n                    USER.set(json);\n                })\n                .catch(() => {\n                    USER.set(null);\n                })\n                .finally(() => {\n                    mounted = true;\n                });\n    });\n</script>\n\n<svelte:head>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/uikit@3.5.3/dist/css/uikit.min.css\"/>\n</svelte:head>\n\n{#if mounted}\n\n    <Router>\n        <header>\n            <Navbar/>\n        </header>\n\n        <main>\n            {#if $USER != null}\n                <Route path=\"/warehouse2\">\n                    <TemplateEntity name=\"Warehouse2\" isCreate>\n                        <div slot=\"inner\">\n                            <Warehouse2Table/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/warehouse2/:id\" let:params>\n                    <TemplateEntity name=\"Warehouse2\">\n                        <div slot=\"inner\">\n                            <Warehouse2Edit id={params.id}/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/warehouse2_create\">\n                    <TemplateEntity name=\"Warehouse2\">\n                        <div slot=\"inner\">\n                            <Warehouse2Create/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/warehouse1\">\n                    <TemplateEntity name=\"Warehouse1\" isCreate>\n                        <div slot=\"inner\">\n                            <Warehouse1Table/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/warehouse1/:id\" let:params>\n                    <TemplateEntity name=\"Warehouse1\">\n                        <div slot=\"inner\">\n                            <Warehouse1Edit id={params.id}/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/warehouse1_create\">\n                    <TemplateEntity name=\"Warehouse1\" isCreate>\n                        <div slot=\"inner\">\n                            <Warehouse1Create/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/sale\">\n                    <TemplateEntity name=\"Sale\" isCreate>\n                        <div slot=\"inner\">\n                            <SaleTable/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/sale/:id\" let:params>\n                    <TemplateEntity name=\"Sale\">\n                        <div slot=\"inner\">\n                            <SaleEdit id={params.id}/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/sale_create\">\n                    <TemplateEntity name=\"Sale\">\n                        <div slot=\"inner\">\n                            <SaleCreate/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n\n                <Route path=\"/good\">\n                    <TemplateEntity name=\"Good\" isCreate>\n                        <div slot=\"inner\">\n                            <GoodTable/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/good/:id\" let:params>\n                    <TemplateEntity name=\"Good\" isCreate>\n                        <div slot=\"inner\">\n                            <GoodEdit id={params.id}/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/good_create\">\n                    <TemplateEntity name=\"Good\">\n                        <div slot=\"inner\">\n                            <GoodCreate/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n\n                <Route path=\"/good\">\n                    <TemplateEntity name=\"Good\" isCreate>\n                        <div slot=\"inner\">\n                            <GoodTable/>\n                        </div>\n                    </TemplateEntity>\n                </Route>\n            {:else}\n                <Route path=\"/registration\" component={Registration}/>\n            {/if}\n\n            <Route path=\"/\">\n                <div>\n                    {#if $USER === null }\n                        Для использования сервиса необходимо <a href=\"/login\">авторизоваться.</a>\n                    {:else}\n                        Добро пожаловать!\n                    {/if}\n                </div>\n            </Route>\n        </main>\n    </Router>\n\n{/if}\n\n<style>\n    main {\n        width: 100%;\n        height: 100%;\n        box-sizing: border-box;\n        padding: 1em;\n    }\n</style>",
    "<script>\n    import {doQuery} from '../../utils.js';\n\n    let username = '';\n    let password = '';\n\n    function handleSubmit() {\n        const json = JSON.stringify({\n            username: username,\n            password: password,\n            roles: [\"USER\"]\n        });\n\n        doQuery('/user', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: json\n        });\n    }\n\n</script>\n\n<div class=\"full\">\n    <form className=\"uk-position-center\" on:submit={handleSubmit}>\n        <label className=\"uk-text-large\">Registration</label>\n        <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-stacked-text\">Username</label>\n            <div class=\"uk-form-controls\">\n                <input class=\"uk-input\" id=\"form-stacked-text\" type=\"text\" required placeholder=\"Enter username\"\n                       bind:value={username}>\n            </div>\n        </div>\n\n        <div class=\"uk-margin\">\n            <label class=\"uk-form-label\" for=\"form-stacked-text\">Password</label>\n            <div class=\"uk-form-controls\">\n                <input class=\"uk-input\" id=\"form-stacked-text\" required type=\"password\" placeholder=\"Enter password\"\n                       bind:value={password}>\n            </div>\n        </div>\n\n        <button class=\"uk-button uk-button-default\" type=\"submit\">Register</button>\n    </form>\n</div>\n\n<style>\n    .full {\n        display: grid;\n        justify-content: center;\n        width: 100%;\n        box-sizing: border-box;\n    }\n\n    .full > form {\n        margin-top: 50%;\n    }\n</style>\n",
    "<script>\n    import {link} from 'svelte-routing';\n\n    export let isCreate = false;\n    export let name;\n\n</script>\n\n\n<div class=\"grid\">\n    <div class=\"title\">\n        <div class=\"uk-text-large\">\n            {name}\n        </div>\n\n        {#if isCreate}\n            <a href=\"{name.toLowerCase()}_create\" use:link>Create</a>\n        {/if}\n    </div>\n\n\n    <slot name=\"inner\">\n\n    </slot>\n</div>\n\n<style>\n    .grid {\n        display: grid;\n        justify-content: left;\n        align-content: start;\n        gap: 1em;\n    }\n\n    .title {\n        display: grid;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "AA+KI,IAAI,cAAC,CAAC,AACF,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,UAAU,CACtB,OAAO,CAAE,GAAG,AAChB,CAAC;ACpID,KAAK,8BAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,UAAU,AAC1B,CAAC,AAED,oBAAK,CAAG,IAAI,eAAC,CAAC,AACV,UAAU,CAAE,GAAG,AACnB,CAAC;AC9BD,KAAK,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,IAAI,CACrB,aAAa,CAAE,KAAK,CACpB,GAAG,CAAE,GAAG,AACZ,CAAC,AAED,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,AACjB,CAAC"
}